steps:
  # Step 0: Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "app/requirements.txt", "--user"]
    env:
      - "BUILD=$BUILD_ID"
      - "LOCATION=$LOCATION"
      - "PROJECT_ID=$PROJECT_ID"
      - "REPO=${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:"
      - "TAG=${REPO}$SHORT_HASH"
      - "LATEST=${REPO}latest"

  # # Run unit tests
  # - name: python
  #   entrypoint: python
  #   args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"]

  # Step 1: Docker Build Container Image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t ${TAG}",
        "-t ${LATEST}",
        "./app",
      ]

  # Step 2: Docker push to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${TAG}",
        "push",
        "${LATEST}",
      ]

  # Step 3: Deploy to Cloud Run
  - name: google/cloud-sdk
    args:
      [
        "gcloud",
        "run",
        "deploy",
        "hellopython",
        "--project",
        "${_PROJECT_NAME}",
        "--platform",
        "managed",
        "--region",
        "${_GCP_REGION}",
        "--image",
        "${LATEST}",
        "--port",
        "8080",
        "--allow-unauthenticated",
      ]

# # Save test logs to Google Cloud Storage
# artifacts:
#   objects:
#     location: gs://build-test-logs-bs
#     paths:
#       - "${SHORT_SHA}_test_log.xml"
# # Store images in Google Artifact Registry
# images:
#   - ${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:${TAG_NAME}
