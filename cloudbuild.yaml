steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "app/requirements.txt", "--user"]
    env:
      - "BUILD=$BUILD_ID"
      - "LOCATION=$LOCATION"
      - "PROJECT_ID=$PROJECT_ID"
      - "TAG_NAME=latest"

  # # Run unit tests
  # - name: python
  #   entrypoint: python
  #   args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"]

  # Docker Build Container Image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        # "-t",
        # "${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:${SHORT_SHA}",
        "-t",
        "${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:$COMMIT_SHA",
        "./app",
      ]

  # Docker push to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:$COMMIT_SHA",
      ]

  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args:
      [
        "gcloud",
        "run",
        "deploy",
        "hellopython:$SHORT_SHA",
        "--project",
        "${_PROJECT_NAME}",
        "--platform",
        "managed",
        "--region",
        "${_GCP_REGION}",
        "--image",
        "${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython",
        "--port",
        "8080",
        "--allow-unauthenticated",
      ]

# # Save test logs to Google Cloud Storage
# artifacts:
#   objects:
#     location: gs://build-test-logs-bs
#     paths:
#       - "${SHORT_SHA}_test_log.xml"
# # Store images in Google Artifact Registry
# images:
#   - ${_ARTIFACT_REGISTRY_URL}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/hellopython:${TAG_NAME}
